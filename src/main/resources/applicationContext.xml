<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <context:component-scan base-package="fr.gatay.cedric"/>
    <jpa:repositories base-package="fr.gatay.cedric.repository"/>
    <tx:annotation-driven/>

    <bean class="fr.gatay.cedric.web.WicketApplication"/>

    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="fr.gatay.cedric.model"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
            </props>
        </property>
    </bean>

    <bean id="userDetailsService" class="fr.gatay.cedric.security.UserDetailsServiceImpl"/>
    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>

    <security:http auto-config="true">
	<security:headers>
        	<security:frame-options disabled="true"></security:frame-options>
	</security:headers>	
        <security:intercept-url pattern="/authorization" access="permitAll()"/>
        <security:intercept-url pattern="/registration" access="permitAll()"/>
        <security:intercept-url pattern="/" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/friends" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/editPost" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/documents" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/audios" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/videos" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/profile" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/messages" access="hasRole('ROLE_USER')"/>
        <security:form-login login-page="/authorization.html" default-target-url="/"
                    login-processing-url="/login"
                    username-parameter="email" password-parameter="password"/>
        <security:csrf disabled="true"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService">
            <security:password-encoder ref="passwordEncoder" />
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
</beans>
